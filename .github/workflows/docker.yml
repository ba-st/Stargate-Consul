name: Build and Publish Docker Images
on:
  workflow_dispatch:
  branches:
    - release-candidate
  release:
    types: [published]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    name: Build and Publish Docker Images
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set build metadata
        id: set-metadata
        run: |
          echo "::set-output name=IMAGE::ghcr.io/${{ github.repository_owner }}/stargate-consul-example"
          echo "::set-output name=BUILD_DATE::$(date +'%Y-%m-%d %H:%M:%S')"
      - name: Set branch name
        id: set-branch-name
        run: |
          if [[ -z "${GITHUB_HEAD_REF##*/}" ]]; then
            echo "::set-output name=BRANCH_NAME::${GITHUB_REF##*/}"
          else
            echo "::set-output name=BRANCH_NAME::${GITHUB_HEAD_REF##*/}"
          fi
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Docker build and push
        uses: docker/build-push-action@v2
        env:
          BRANCH_NAME: {{ steps.set-branch-name.outputs.BRANCH_NAME }}
        with:
          context: ./docker
          file: ./docker/Dockerfile
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.created=${{ steps.set-metadata.outputs.BUILD_DATE }}
            org.opencontainers.image.ref.name=${{ github.ref }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          tags: |
            ${{ steps.set-metadata.outputs.IMAGE }}:latest
            ${{ steps.set-metadata.outputs.IMAGE }}:${{ github.sha }}
          push: true
          secrets: |
              GIT_AUTH_TOKEN=${{ secrets.DOCKER_REGISTRY_TOKEN }}
